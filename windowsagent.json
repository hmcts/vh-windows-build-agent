{
  "variables": {
    "time_stamp": "",
    "SPN_client_id": "",
    "SPN_client_secret": "",
    "AAD_tenant_id": "",
    "Azure_subscription_id": ""
  },
  "builders": [
    {
      "type": "azure-arm",
      "client_id": "{{user `SPN_client_id`}}",
      "client_secret": "{{user `SPN_client_secret`}}",
      "tenant_id": "{{user `AAD_tenant_id`}}",
      "subscription_id": "{{user `Azure_subscription_id`}}",
      "managed_image_resource_group_name": "vh-packer-image",
      "managed_image_name": "Datacenter-Core-1803-with-Containers-smalldisk-{{user `time_stamp`}}",
      "os_type": "Windows",
      "image_publisher": "MicrosoftWindowsServer",
      "image_offer": "WindowsServerSemiAnnual",
      "image_sku": "Datacenter-Core-1803-with-Containers-smalldisk",
      "communicator": "winrm",
      "winrm_use_ssl": true,
      "winrm_insecure": true,
      "winrm_timeout": "3m",
      "winrm_username": "packer",
      "azure_tags": {
        "dept": "Engineering",
        "team": "vh",
        "task": "Image deployment",
        "timestamp": "{{timestamp}}"
      },
      "location": "UK South",
      "vm_size": "Standard_D4s_v3"
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "elevated_user": "packer",
      "elevated_password": "{{.WinRMPassword}}",
      "elevated_execute_command": "powershell -executionpolicy bypass \"& { if (Test-Path variable:global:ProgressPreference){$ProgressPreference='SilentlyContinue'};. {{.Vars}}; &'{{.Path}}'; exit $LastExitCode }\"",
      "script": "ConfigScript.ps1"
    },
    {
      "type": "windows-restart",
      "restart_check_command": "powershell -command \"& {Write-Output 'restarted.'}\""
    },
    {
      "type": "powershell",
      "inline": [
        "Write-Output \"Generalizing VM\"",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
        "Write-Output \"Waiting for VM to be ready\"",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
      ]
    }
  ]
}